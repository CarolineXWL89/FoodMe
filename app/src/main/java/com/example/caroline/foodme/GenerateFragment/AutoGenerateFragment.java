package com.example.caroline.foodme.GenerateFragment;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.example.caroline.foodme.API_Interfaces.DataMuseNutritionIngr;
import com.example.caroline.foodme.API_Interfaces.DataMuseNutritionSearch;
import com.example.caroline.foodme.EdamamNutritionKeys;
import com.example.caroline.foodme.EdamamObjects.EntitySearch;
import com.example.caroline.foodme.EdamamObjects.NutritionResponse;
import com.example.caroline.foodme.EdamamObjects.fooddotjson;
import com.example.caroline.foodme.R;

import java.util.ArrayList;

import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;

public class AutoGenerateFragment extends AppCompatActivity {

    private Button randomGenButton, inputCreateButton;
    private EditText inputIngrTextView;
    private LinearLayout inputtedListLinLayout;
    private View view;
    private RecyclerView recyclerView;
    private RecyclerView.Adapter adapter;
    private RecyclerView.LayoutManager layoutManager;

    //TODO do we need LayoutInflater and View

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_auto_generate_fragment);

        wireWidgets();

        //holds list of the return info from searching for a food
        final ArrayList<EntitySearch> entitySearches = new ArrayList<>();
        String foodSearched = ""; //what we want to search for --> gotten from TextEdit

        Retrofit retrofit = new Retrofit.Builder()
                .baseUrl(DataMuseNutritionIngr.baseURL)
                .addConverterFactory(GsonConverterFactory.create())
                .build();
        //
        DataMuseNutritionIngr api = retrofit.create(DataMuseNutritionIngr.class);


        Call<ArrayList<EntitySearch>> call = api.getIngrNutrient(foodSearched, EdamamNutritionKeys.APP_ID_NUTRITION, EdamamNutritionKeys.APP_KEY_NUTRITION);

        call.enqueue(new Callback<ArrayList<EntitySearch>>() {
            @Override
            public void onResponse(Call<ArrayList<EntitySearch>> call, Response<ArrayList<EntitySearch>> response) {
                entitySearches.clear();
                entitySearches.addAll(response.body());
            }
            @Override
            public void onFailure(Call<ArrayList<EntitySearch>> call, Throwable t) {
                Toast.makeText(AutoGenerateFragment.this, "Invalid food!!!", Toast.LENGTH_SHORT).show();
            }
        });

        final fooddotjson fooddotjson = new fooddotjson(1);
        String[] uriTwo = fooddotjson.findIngredient(entitySearches);
        fooddotjson.addIngredient(uriTwo);

        DataMuseNutritionSearch apiFoodPackage = retrofit.create(DataMuseNutritionSearch.class);
        final NutritionResponse nutritionResponse = apiFoodPackage.sendFood(fooddotjson, EdamamNutritionKeys.APP_ID_NUTRITION, EdamamNutritionKeys.APP_KEY_NUTRITION); //TODO check assignment
        //assuming this is returning a package with the FoodResponse object information

        //return inflater.inflate(R.layout.fragment_create, container, false); TODO Why do we need it here?

        //TODO Have the two possibilities for onClick
        //Randomly generate recipe
        autoGenerated(view);

        //Create RecyclerView with foods displayed w/ EditText inputs
        String input = inputIngrTextView.getText().toString();



    }

    private void wireWidgets(){
        //TODO wire widgets
        inputtedListLinLayout = findViewById(R.id.list_input_foods);
        inputCreateButton = findViewById(R.id.button_choice_create);
        randomGenButton = findViewById(R.id.button_auto_create);
        inputIngrTextView = findViewById(R.id.editText_ingr_input);
        recyclerView = findViewById(R.id.recyclerView); //TODO Why isn't recyclerView_foods showing up?
    }

    private void autoGenerated(View view){
        //TODO Have APIs and set-ups for autocreate --> ONLY uses that as the list ingredients
        RecipeGeneratorMethods recipeGeneratorMethods = new RecipeGeneratorMethods();
        ArrayList<ArrayList<String>> allFoods = recipeGeneratorMethods.listAllIngredients();
        /*
        TODO 1. Using foods chosen (specific #?) send each through database
        TODO 2. Get nutrient values we need
        TODO 3. Add them together
        TODO 4. Make recipe in format for recipe_layout.xml
        TODO 5. Display all information
         */

    }

    private void userChoiceIngr(View view){ //how do we do this
        //TODO have user have input into textEdits in RecyclerView and then uses that as a matching
        ArrayList<String> userIngrs = new ArrayList<>();
        RecipeGeneratorMethods recipeGeneratorMethods = new RecipeGeneratorMethods();
        recipeGeneratorMethods.getLists();

    }

    private void setRecyclerView(){
        //https://developer.android.com/guide/topics/ui/layout/recyclerview#java
        recyclerView.setHasFixedSize(true);
        layoutManager = new LinearLayoutManager(this);
        recyclerView.setLayoutManager(layoutManager);
        adapter = new RecyclerView.Adapter() {
            @Override
            public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
                return null;
            }

            @Override
            public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {

            }

            @Override
            public int getItemCount() {
                return 0;
            }
        };
    }
}
